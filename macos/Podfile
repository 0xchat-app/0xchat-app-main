platform :osx, '10.15'

# CocoaPods analytics sends network stats synchronously affecting flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'ephemeral', 'Flutter-Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure \"flutter pub get\" is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Flutter-Generated.xcconfig, then run \"flutter pub get\""
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_macos_podfile_setup

target 'Runner' do
  use_frameworks!
  use_modular_headers!

  flutter_install_all_macos_pods File.dirname(File.realpath(__FILE__))
  target 'RunnerTests' do
    inherit! :search_paths
  end
  pod 'FMDB/SQLCipher', '2.7.10'
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_macos_build_settings(target)

    privacy_file_path = File.join(File.dirname(__FILE__), 'PrivacyInfo.xcprivacy')

    if File.exist?(privacy_file_path)
      target.build_phases.each do |build_phase|
        if build_phase.is_a? Xcodeproj::Project::Object::PBXResourcesBuildPhase
          resources_folder = File.join(target.project.project_dir, 'Resources')
          FileUtils.mkdir_p(resources_folder) unless File.directory?(resources_folder)
          
          file_in_resources = File.join(resources_folder, 'PrivacyInfo.xcprivacy')
          FileUtils.cp(privacy_file_path, file_in_resources) unless File.exist?(file_in_resources)
        end
      end
    else
      puts "Warning: PrivacyInfo.xcprivacy file not found at #{privacy_file_path}"
    end

  end
  
# Bitcode stripping configuration
  bitcode_strip_path = `xcrun --find bitcode_strip`.chomp
  def strip_bitcode_from_framework(bitcode_strip_path, framework_path)
    command = "#{bitcode_strip_path} #{framework_path} -r -o #{framework_path}"
    puts "Stripping bitcode: #{command}"
    system(command)
  end

  framework_paths = [
  ]

  framework_paths.each do |framework_path|
    strip_bitcode_from_framework(bitcode_strip_path, framework_path)
  end
end



